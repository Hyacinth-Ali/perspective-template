public createElement(p1, p2, ...) {
  element = create(p1, p2, ...);
  createElements(element, p1, p2, ...);
}
private createElements(element, p1, p2, ...) {
  for (MappingType type :
    getMappingTypes(element)) {
      mappings = getMappings(type, element);
      metaclass = getOtherMetaClass(type, element);
      switch(getCreateType(type)) {
        case CAN_CREATE:
          if (mappings.size() == 0 ) {
            boolean isOther = isCreateOther();
            if (isOther) {
              other = CREATE(metaclass, p1, p2, ...);
              createMapping(type, element, other);
              createElements(other, p1, p2, ...);
            }
          }
          break;
        case CREATE_OR_USE_NON_MAPPED:
          if (mappings.size() == 0) {
            other = findCorrespondingElement();
            if (other == null ||
              getMappings(other).size() > 0) {
                other = CREATE(metaclass, p1, p2, ...);
              }
              createMapping(type, element, other);
              createElements(other, p1, p2, ...);
            }
            break;
          case . . .
        }
      }
    }
