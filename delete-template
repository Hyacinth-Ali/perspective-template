
HashSet<EObject> deleteElements = new HashSet<EObject>();
HashSet<EObject> deleteMappings = new HashSet<EObject>();

// There are basically three types of delete in the Template
// 1) JUST_DELETE, i.e., just delete the element of interest and its mappings,
// e.g., from in (1 .. 0..1)
// 2) DELETE_OTHERS, i.e., delete the element of interest, its mappings, and
// other mapped elemets e.g., to in (1 .. 0..1)
// 3) DELETE_SINGLEMAPPED, i.e., delete the element of interest, its mappings,
// and other elements with single mapping e.g., from in (1 .. 1..*)

public deleteElement(elementHere, deleteType) {
  deleteElements.clear();
  deleteMappings.clear();
  deleteElements(elementHere, deleteType);
}

private deleteElements(elementHere, deleteType) {
  List<Mapping> mappings = getMappings(<identifier>, elementHere);
  deleteElements.add(elementHere);
  deleteMappings.add(mappings);
  if (deleteType != JUST_DELETE) {
    for (Mapping mapping : mappings) {
      elementOther = getElementOther(mapping, elementHere);
      elementOtherMappings = getMappings(<identifier>, elementOther);
      if (deleteType == DELETE_OTHERS) {
        deleteElements(elementOther, deleteType);
      } else {
        if (elementOtherMappings.size() == 1 ) {
          deleteElements(elementOther, deleteElements);
        }
      }
    }
  }
  // Just delete
  if (deleteELement.size() == 1) {
    D(mappings)
    D(elementHere)
  }
}
